{
  "version": 3,
  "sources": ["../src/index.tsx", "../src/DefaultIcon.tsx", "../src/services/api.js", "../src/styles.module.css"],
  "sourcesContent": ["import React, { useEffect } from \"react\";\nimport DefaultIcon from \"./DefaultIcon\";\nimport { connectionHandler } from \"./services/api.js\";\n// import \"./styles.module.css\";\nimport styles from \"./styles.module.css\";\n\nconst TicketBot = () => {\n  const [showPanel, setShowPanel] = React.useState(false);\n  const [message, setMessage] = React.useState(\"Loading...\");\n\n  const readMessage = async () => {\n    const localMessage = await connectionHandler();\n    setMessage(localMessage);\n  };\n\n  useEffect(() => {\n    readMessage();\n  }, []);\n\n  // return showPanel ? (\n  // <div className=\"panel\">\n  // <div className=\"panelContainer\">\n  // <div className=\"panelHeader\">\n  // <strong>Ticket Bot</strong>\n  // <div className=\"panelClose\" onClick={() => setShowPanel(false)}>\n  // Cerrar\n  // </div>\n  // </div>\n\n  // <div className=\"content\">{message}</div>\n  // </div>\n  // </div>\n  // ) : (\n  // <div className=\"container\" onClick={() => setShowPanel(true)}>\n  // <DefaultIcon />\n  // </div>\n  // );\n\n  return showPanel ? (\n    <div className={styles.panel}>\n      <div className={styles.panelContainer}>\n        <div className={styles.panelHeader}>\n          <strong>Ticket Bot</strong>\n          <div\n            className={styles.panelClose}\n            onClick={() => setShowPanel(false)}\n          >\n            Cerrar\n          </div>\n        </div>\n\n        <div className={styles.content}>{message}</div>\n      </div>\n    </div>\n  ) : (\n    <div className={styles.container} onClick={() => setShowPanel(true)}>\n      <DefaultIcon />\n    </div>\n  );\n};\n\nexport default TicketBot;\n", "import React from \"react\";\n\nconst DefaultIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"40\"\n    height=\"40\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"#000000\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <rect x=\"3\" y=\"11\" width=\"18\" height=\"10\" rx=\"2\" />\n    <circle cx=\"12\" cy=\"5\" r=\"2\" />\n    <path d=\"M12 7v4\" />\n    <line x1=\"8\" y1=\"16\" x2=\"8\" y2=\"16\" />\n    <line x1=\"16\" y1=\"16\" x2=\"16\" y2=\"16\" />\n  </svg>\n);\n\nexport default DefaultIcon;\n", "const serverURL = \"http://localhost:8080/\";\n\nexport const connectionHandler = async () => {\n  try {\n    const response = await fetch(serverURL);\n    const data = await response.json();\n    console.log(data);\n    return data.message;\n  } catch (e) {\n    console.error(e);\n  }\n};\n", ".container {\n  width: 60px;\n  height: 60px;\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  border-radius: 50%;\n  background: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.panel {\n  width: 400px;\n  height: 600px;\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  border-radius: 5px;\n  background: white;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  z-index: 1000;\n  color: black;\n}\n\n.panelContainer {\n  width: 100%;\n}\n\n.panelHeader {\n  background: #ff000050;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n}\n\n.panelClose {\n  background: red;\n  padding: 5px 10px;\n  border-radius: 15px;\n  font-size: 11px;\n  color: white;\n}\n"],
  "mappings": "AAAA,OAAOA,GAAS,aAAAC,MAAiB,QCAjC,OAAOC,MAAW,QAElB,IAAMC,EAAc,IAClBD,EAAA,cAAC,OACC,MAAM,6BACN,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,OAAO,UACP,YAAY,IACZ,cAAc,QACd,eAAe,SAEfA,EAAA,cAAC,QAAK,EAAE,IAAI,EAAE,KAAK,MAAM,KAAK,OAAO,KAAK,GAAG,IAAI,EACjDA,EAAA,cAAC,UAAO,GAAG,KAAK,GAAG,IAAI,EAAE,IAAI,EAC7BA,EAAA,cAAC,QAAK,EAAE,UAAU,EAClBA,EAAA,cAAC,QAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,EACpCA,EAAA,cAAC,QAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,CACxC,EAGKE,EAAQD,ECtBf,IAAME,EAAY,yBAELC,EAAoB,SAAY,CAC3C,GAAI,CAEF,IAAMC,EAAO,MADI,MAAM,MAAMF,CAAS,GACV,KAAK,EACjC,eAAQ,IAAIE,CAAI,EACTA,EAAK,OACd,OAASC,EAAG,CACV,QAAQ,MAAMA,CAAC,CACjB,CACF,ECXA,IAAAC,EAAA,CAAC,UAAAC,IAaA,MAAAC,IAeA,eAAAC,IAIA,YAAAC,IASA,WAAAC,KHnCD,IAAMC,EAAY,IAAM,CACtB,GAAM,CAACC,EAAWC,CAAY,EAAIC,EAAM,SAAS,EAAK,EAChD,CAACC,EAASC,CAAU,EAAIF,EAAM,SAAS,YAAY,EAEnDG,EAAc,SAAY,CAC9B,IAAMC,EAAe,MAAMC,EAAkB,EAC7CH,EAAWE,CAAY,CACzB,EAEA,OAAAE,EAAU,IAAM,CACdH,EAAY,CACd,EAAG,CAAC,CAAC,EAqBEL,EACLE,EAAA,cAAC,OAAI,UAAWO,EAAO,OACrBP,EAAA,cAAC,OAAI,UAAWO,EAAO,gBACrBP,EAAA,cAAC,OAAI,UAAWO,EAAO,aACrBP,EAAA,cAAC,cAAO,YAAU,EAClBA,EAAA,cAAC,OACC,UAAWO,EAAO,WAClB,QAAS,IAAMR,EAAa,EAAK,GAClC,QAED,CACF,EAEAC,EAAA,cAAC,OAAI,UAAWO,EAAO,SAAUN,CAAQ,CAC3C,CACF,EAEAD,EAAA,cAAC,OAAI,UAAWO,EAAO,UAAW,QAAS,IAAMR,EAAa,EAAI,GAChEC,EAAA,cAACQ,EAAA,IAAY,CACf,CAEJ,EAEOC,EAAQZ",
  "names": ["React", "useEffect", "React", "DefaultIcon", "DefaultIcon_default", "serverURL", "connectionHandler", "data", "e", "styles_default", "container", "panel", "panelContainer", "panelHeader", "panelClose", "TicketBot", "showPanel", "setShowPanel", "React", "message", "setMessage", "readMessage", "localMessage", "connectionHandler", "useEffect", "styles_default", "DefaultIcon_default", "src_default"]
}
